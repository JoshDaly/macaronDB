#!/usr/bin/python
###############################################################################
#                                                                             #
#    macaronDB                                                                #
#                                                                             #
#    Description!!                                                            #
#                                                                             #
#    Copyright (C) Joshua Daly                                                #
#                                                                             #
###############################################################################
#                                                                             #
#    This program is free software: you can redistribute it and/or modify     #
#    it under the terms of the GNU General Public License as published by     #
#    the Free Software Foundation, either version 3 of the License, or        #
#    (at your option) any later version.                                      #
#                                                                             #
#    This program is distributed in the hope that it will be useful,          #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of           #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
#    GNU General Public License for more details.                             #
#                                                                             #
#    You should have received a copy of the GNU General Public License        #
#    along with this program. If not, see <http://www.gnu.org/licenses/>.     #
#                                                                             #
###############################################################################

__author__ = "Joshua Daly"
__copyright__ = "Copyright 2017"
__credits__ = ["Joshua Daly"]
__license__ = "GPLv3"
__version__ = "0.0.1"
__maintainer__ = "Joshua Daly"
__email__ = "joshua.daly@uqconnect.edu.au"
__status__ = "Dev"

###############################################################################
###############################################################################
###############################################################################
###############################################################################

# system includes

# local includes
from macarondb.server import Server

###############################################################################
###############################################################################
###############################################################################
###############################################################################

import argparse
import sys

###############################################################################
###############################################################################
###############################################################################
###############################################################################

def doWork(args):
	S = Server(args.db)
	
	if(args.subparser_name == 'server'):
		pass
		
	elif(args.subparser_name) == 'view':
		pass
		
	elif(args.subparser_name) == 'test':
		pass
	
	else:
		S.sayHi()
		print "ERROR: Unknown mode '%s'" % args.subparser_name


###############################################################################
###############################################################################
###############################################################################
###############################################################################

def printHelp():
    print '''\

             ...::: MacaronDB :::...

    Store all your macaron data in a handy SQLite database

   -----------------------------------------
                version: %s
   -----------------------------------------

    macarondb server   -> Create a macarondb server to handle DB creation and I/O requests
    macarondb view     -> Utilities for visualising macarondb data
    macarondb test     -> Test 

    USE: macarondb OPTION -h to see detailed options
    ''' % __version__

if __name__ == '__main__':
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    subparsers = parser.add_subparsers(help="--", dest='subparser_name')
    
	#-------------------------------------------------
    #-------------------------------------------------
    # Deploy MacaronDB server
    server_parser = subparsers.add_parser('server',
                                          formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                          help='Create a MacaronDB server to handle DB creation and I/O request',
                                          description='Create a MacaronDB server to handle DB creation and I/O request')
    serv_subparser = server_parser.add_subparsers(help='--', dest='serv_parser_name')
    
    #-------------------------------------------------
    
    # Import macaron ingredient prices into the database (create if necessary)
    import_gamedata_parser = serv_subparser.add_parser('importIngredientPrices',
                                               formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                               help='Import new ingredient price information into DB',
                                               description='Import new ingredient price information into DB')
    import_gamedata_parser.add_argument("db", help="Path to the MacaronDB database to use / create")
    import_gamedata_parser.add_argument("ingredientFile", help="File ingredients prices")
    
    #-------------------------------------------------
    #-------------------------------------------------
    # Visualise MacaronDB data
    view_parser = subparsers.add_parser('view',
                                        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                        help='Utilities for visualising macarondb data',
                                        description='Utilities for visualising macarondb data')
    
    view_subparsers = view_parser.add_subparsers(help='--', dest='view_parser_name')
    
    #-------------------------------------------------
    #-------------------------------------------------
    # test FootballDB data
    test_parser = subparsers.add_parser('test',
                                        formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                        help='Test',
                                        description='Test')
    test_parser.add_argument("db", help="Path to the macarondb database to use / create")
    
    #-------------------------------------------------
    
    
    #-------------------------------------------------
    # get and check options
    args = None
    if(len(sys.argv) == 1):
        printHelp()
        sys.exit(0)
    elif(sys.argv[1] == '-v' or sys.argv[1] == '--version'):
        print "MacaronDB: version %s %s %s" % (__version__, __copyright__, __author__)
        sys.exit(0)
    elif(sys.argv[1] == '-h' or sys.argv[1] == '--help'):
        printHelp()
        sys.exit(0)
    else:
        args = parser.parse_args()

    # profiling happens here. If you'd like to track the speed your code runs at
    # then set the following to True and voila!
    if(False):
        import cProfile
        cProfile.run('doWork(args)', 'profile')
        ##########################################
        ##########################################
        # Use this in python console!
        #import pstats
        #p = pstats.Stats('prof')
        #p.sort_stats('cumulative').print_stats(10)
        #p.sort_stats('time').print_stats(10)
        ##########################################
        ##########################################
    else:
        doWork(args)

###############################################################################
###############################################################################
###############################################################################
###############################################################################

